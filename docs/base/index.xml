<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端框架基础 on 77前端文档</title>
    <link>https://api.wss.cool/docs/base/</link>
    <description>Recent content in 前端框架基础 on 77前端文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	<atom:link href="https://api.wss.cool/docs/base/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>模型、entity与元数据</title>
      <link>https://api.wss.cool/docs/base/entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://api.wss.cool/docs/base/entity/</guid>
      <description>模型、entity与元数据 模型 我们系统的后端是领域模型驱动的。比如下图是预算编制方案的模型，其中包含了很多实体(entity)(蓝色的)。 entity 一个entity就是一个对象，可以通过模型看到各个属性的名字和类型，以及entity之间的关系。
我们前端的工作就是为entity制作表单和列表，来创建entity的实例或展示entity的信息。
元数据 前端的元数据主要是对entity的描述。entity的名字、entity的属性名、属性类型等等。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://api.wss.cool/docs/base/%E9%A2%84%E7%BD%AE%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://api.wss.cool/docs/base/%E9%A2%84%E7%BD%AE%E6%95%B0%E6%8D%AE/</guid>
      <description>预置数据 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://api.wss.cool/docs/base/entitycrud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://api.wss.cool/docs/base/entitycrud/</guid>
      <description>脱离form对entity进行crud import { EntityCRUDHelper } from &amp;#39;@root/solutions/entity-crud&amp;#39;; EntityCRUDHelper.getInstance().update(EN_BudgetAccountDocImport, data) 注意事项 entity不能是子表。子表必须通过主表创建。
EntityCRUDHelper的其他api 方法 | 参数 | 描述 :&amp;mdash;:|:&amp;mdash;|:&amp;mdash; create | entityName, data | 创建一条记录 update | entityName, data | 修改一条记录</description>
    </item>
    
    <item>
      <title></title>
      <link>https://api.wss.cool/docs/base/gen%E4%B8%8Etsc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://api.wss.cool/docs/base/gen%E4%B8%8Etsc/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://api.wss.cool/docs/base/grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://api.wss.cool/docs/base/grid/</guid>
      <description>grid grid是前端解决子表和列表的方案，对应的组件是AdvanceGird。
editOptions editOptions下面的editParams会传给单元格的渲染组件
表单 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://api.wss.cool/docs/base/%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://api.wss.cool/docs/base/%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90/</guid>
      <description>数据权限 前端的gql默认是会按数据权限过滤的。如果想忽略数据权限的话，需要在option中加contextObject参数，
const dataLoader = new DataLoader(EN_BudgetPlan, [&amp;#39;id&amp;#39;], { criteriaStr: `projectId=&amp;#39;${this.projectId}&amp;#39;`, sorts: [{ name: &amp;#39;createdTime&amp;#39;, isDesending: true }], contextObject: &amp;#39;ignoreDataAuth&amp;#39;, } as IDataLoaderQueryOptions); </description>
    </item>
    
  </channel>
</rss>