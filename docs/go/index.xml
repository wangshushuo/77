<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 新手村生存攻略</title>
    <link>https://77doc.wss.cool/docs/go/</link>
    <description>Recent content in Go on 新手村生存攻略</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 15 Sep 2021 11:25:54 +0800</lastBuildDate>
    
	<atom:link href="https://77doc.wss.cool/docs/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>是否启用多组织</title>
      <link>https://77doc.wss.cool/docs/go/%E6%98%AF%E5%90%A6%E5%90%AF%E7%94%A8%E5%A4%9A%E7%BB%84%E7%BB%87/</link>
      <pubDate>Wed, 15 Sep 2021 11:25:54 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/go/%E6%98%AF%E5%90%A6%E5%90%AF%E7%94%A8%E5%A4%9A%E7%BB%84%E7%BB%87/</guid>
      <description>func isEnableMultiOrg() bool { systemSettingValues := ctx.GetContext().Values().Get(systemSettingValuesConstants) values, ok := systemSettingValues.(map[string]*datamodels.SettingValue) if ok { isEnabledMultiOrg := values[gen_ec.EC_Setting_isEnabledMultiOrg] if isEnabledMultiOrg.Value.(bool) { return true } } return false } </description>
    </item>
    
    <item>
      <title>Fetch Gql</title>
      <link>https://77doc.wss.cool/docs/go/fetch-gql/</link>
      <pubDate>Thu, 19 Aug 2021 11:00:12 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/go/fetch-gql/</guid>
      <description>import ( gql_util &amp;#34;q7link.com/app/trek/services/form-services/middlewares/entities/project/gql-util&amp;#34; ) func fetchBudgetPlan(projectId string, usedOrgId string, ctx form_context.FormContext) []Plan { result := FieldMappingRes{} gql := gql_util.GQL{ QueryGqlTemplate: `{ BudgetPlan(criteriaStr: &amp;#34;createdOrgId=&amp;#39;{{.createdOrgId}}&amp;#39; AND projectId=&amp;#39;{{.projectId}}&amp;#39;&amp;#34;) { billStatus } }`, BindVars: map[string]string{ &amp;#34;createdOrgId&amp;#34;: usedOrgId, &amp;#34;projectId&amp;#34;: projectId, }, Result: &amp;amp;result, Ctx: ctx.GetContext(), } gql.Fetch() return result.Data.BudgetPlan } </description>
    </item>
    
  </channel>
</rss>