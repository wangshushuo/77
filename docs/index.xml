<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on 新手村生存攻略</title>
    <link>https://77doc.wss.cool/docs/</link>
    <description>Recent content in Docs on 新手村生存攻略</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 25 Oct 2022 16:46:02 +0800</lastBuildDate>
    
	<atom:link href="https://77doc.wss.cool/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>预算项目匹配</title>
      <link>https://77doc.wss.cool/docs/%E9%A2%84%E7%AE%97%E9%A1%B9%E7%9B%AE%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Tue, 25 Oct 2022 16:46:02 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E9%A2%84%E7%AE%97%E9%A1%B9%E7%9B%AE%E5%8C%B9%E9%85%8D/</guid>
      <description></description>
    </item>
    
    <item>
      <title>新手开发指南</title>
      <link>https://77doc.wss.cool/docs/%E6%96%B0%E6%89%8B%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 25 Oct 2022 16:29:29 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E6%96%B0%E6%89%8B%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</guid>
      <description> 表单  顶部按钮  添加自定义联查按钮   水印 底部左侧按钮 底部右侧按钮 查看态自定义穿透事件 字段参数  参照  权限 显示停用 快捷创建 条件 高级参照  多选并添加多行     数字精度   主表  字段自定义渲染   子表  子表头部按钮 行按钮 自定义子表 视图   自定义section   列表  查询虚拟字段  添加   主表/子表criteriaStr 列表显示虚拟字段  添加 导出   顶部按钮 行按钮   通用  go  发起请求 并行 网络请求接口     审批流  允许行编辑    Form  List </description>
    </item>
    
    <item>
      <title>移动端应用页面新增一个实体</title>
      <link>https://77doc.wss.cool/docs/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BA%94%E7%94%A8%E9%A1%B5%E9%9D%A2%E6%96%B0%E5%A2%9E%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93/</link>
      <pubDate>Tue, 18 Oct 2022 20:02:44 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BA%94%E7%94%A8%E9%A1%B5%E9%9D%A2%E6%96%B0%E5%A2%9E%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93/</guid>
      <description>我这次新加了一个人员档案列表及查看表单，记录一下
预制移动端列表和表单 列表路由 apps/link-h5/src/stackNavigator/defines/subpackage.tsx
常量配置 apps/link-h5/src/subpackages/basicArchives/consts/lang/en.ts ，英文名称 apps/link-h5/src/subpackages/basicArchives/consts/lang/zh-cn.ts，中文名称 apps/link-h5/src/subpackages/basicArchives/consts/applyNames.ts，实体名字 apps/link-h5/src/subpackages/basicArchives/consts/applyPagePaths.ts，实体的路由 apps/link-h5/src/subpackages/basicArchives/consts/applyStatic.ts，图标的图标 apps/link-h5/src/subpackages/basicArchives/consts/config.ts，“人员”是“往来单位”的下级 表单presenter apps/link-h5/src/subpackages/biz-forms/pages/biz-form/presenter.ts，实体对应的formPresenter apps/link-h5/src/subpackages/biz-forms/pages/biz-form/presenters/user/UserFormPresenter.tsx，一个最简单的FormPresenter
列表presenter apps/link-h5/src/subpackages/biz-forms/pages/user-list/UserListPagePresenter.tsx，一个最简单的ListPresenter</description>
    </item>
    
    <item>
      <title>子表操作列消失排查</title>
      <link>https://77doc.wss.cool/docs/%E5%AD%90%E8%A1%A8%E6%93%8D%E4%BD%9C%E5%88%97%E6%B6%88%E5%A4%B1%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Fri, 02 Sep 2022 15:29:52 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E5%AD%90%E8%A1%A8%E6%93%8D%E4%BD%9C%E5%88%97%E6%B6%88%E5%A4%B1%E6%8E%92%E6%9F%A5/</guid>
      <description>actionColumnOption.initVisible ： false
管理员 actionColumnOption: initVisible: true
子表没有“操作”列 PropsBuilder的构造器和updateProps方法中，都接收了一个参数——initGridProps，其中有 actionColumnOption: initVisible: true，被它影响了，那么这个参数是从哪来的呢？
在DetailGrid.tsx中，
const actionColumnOption = Object.assign( { rowActions: this.rowActions, initVisible: this.getActionColumnVisible(), visibleSize: 3, }, dynamicProps.actionColumnOption || {}, );  有两个来源：this.getActionColumnVisible() 和 dynamicProps.actionColumnOption
 this.getActionColumnVisible() 这里判断了附件按钮，如果没有附件权限，就隐藏了。 dynamicProps.actionColumnOption  </description>
    </item>
    
    <item>
      <title>Spread.js</title>
      <link>https://77doc.wss.cool/docs/spread.js/</link>
      <pubDate>Wed, 13 Jul 2022 14:27:15 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/spread.js/</guid>
      <description>开启过滤功能 // Configure Workbook and Worksheet var spread = new GC.Spread.Sheets.Workbook(&amp;#34;ss&amp;#34;); var activeSheet = spread.getActiveSheet(); activeSheet.setValue(0, 0, &amp;#34;North&amp;#34;); activeSheet.setValue(1, 0, &amp;#34;South&amp;#34;); activeSheet.setValue(2, 0, &amp;#34;East&amp;#34;); activeSheet.setValue(3, 0, &amp;#34;South&amp;#34;); activeSheet.setValue(4, 0, &amp;#34;North&amp;#34;); activeSheet.setValue(5, 0, &amp;#34;North&amp;#34;); activeSheet.setValue(6, 0, &amp;#34;West&amp;#34;); activeSheet.setColumnWidth(0, 80); // Set a row Filter activeSheet.rowFilter(new GC.Spread.Sheets.Filter.HideRowFilter(new GC.Spread.Sheets.Range(0, 0, 7, 1))); // Filter column 1 by &amp;#34;North&amp;#34; var rowFilter = spread.getActiveSheet().rowFilter(); var condition = new GC.Spread.Sheets.ConditionalFormatting.Condition( GC.Spread.Sheets.ConditionalFormatting.ConditionType.textCondition, { compareType: GC.Spread.Sheets.ConditionalFormatting.TextCompareType.equalsTo, expected: &amp;#34;North&amp;#34; }); rowFilter.</description>
    </item>
    
    <item>
      <title>路由</title>
      <link>https://77doc.wss.cool/docs/%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Thu, 12 May 2022 20:00:53 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E8%B7%AF%E7%94%B1/</guid>
      <description>表单 const hash = appRouterHashManager.generateHash(EN_WorkforceResource, PageModeEnum.Form, { id: props.data.id, mode: BizFormModeEnum.View, }); proxyHistory.push(hash, { onSuccess: () =&amp;gt; { console.log(111, &amp;#39;onSuccess&amp;#39;); }, }); 列表 /** * ListSolution 的透传支持传递查询条件 */ export interface IListHashOptions&amp;lt;T = extraParamsType&amp;gt; { groupName: string; queryItems?: IQueryItem[]; criteriaStr?: string; queryStringParams?: { [key: string]: string }; queryCriterias?: IQueryCriteria[]; queryListDefId?: string; listColumnsDefId?: string; autoload?: boolean; isOldWay?: boolean; extraParams?: T; } // 列表，只跳转 const hash = appRouterHashManager.generateHash(EN_SettlementMethod, PageModeEnum.List); // 列表，指定列表方案 const hash = appRouterHashManager.</description>
    </item>
    
    <item>
      <title>表单顶部按钮</title>
      <link>https://77doc.wss.cool/docs/buttons/%E8%A1%A8%E5%8D%95%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE/</link>
      <pubDate>Mon, 15 Nov 2021 10:51:25 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/buttons/%E8%A1%A8%E5%8D%95%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE/</guid>
      <description>特征 首先它两个特征：presenter和MenuButton
@contextProvider(PresenterConsumer, &amp;#39;presenter&amp;#39;) @observer export class OpenButton extends MenuButton { // ... } presenter的结构 它是 BizFormPresenter 类型的。</description>
    </item>
    
    <item>
      <title>预置菜单</title>
      <link>https://77doc.wss.cool/docs/%E9%A2%84%E7%BD%AE%E8%8F%9C%E5%8D%95/</link>
      <pubDate>Wed, 03 Nov 2021 17:34:49 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E9%A2%84%E7%BD%AE%E8%8F%9C%E5%8D%95/</guid>
      <description>https://shimo.im/docs/Rqt3QWJvtXkqX6wW</description>
    </item>
    
    <item>
      <title>业务规则数字单元格点击错误排查</title>
      <link>https://77doc.wss.cool/docs/%E4%B8%9A%E5%8A%A1%E8%A7%84%E5%88%99%E6%95%B0%E5%AD%97%E5%8D%95%E5%85%83%E6%A0%BC%E7%82%B9%E5%87%BB%E9%94%99%E8%AF%AF%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Fri, 20 Aug 2021 10:37:45 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/%E4%B8%9A%E5%8A%A1%E8%A7%84%E5%88%99%E6%95%B0%E5%AD%97%E5%8D%95%E5%85%83%E6%A0%BC%E7%82%B9%E5%87%BB%E9%94%99%E8%AF%AF%E6%8E%92%E6%9F%A5/</guid>
      <description>工时的业务规则中又一个“填报单位允许最小工时”是数字类型，默认值是空。
对于form来说它的field.value就是null，组件渲染顺序是这样的。最后到ReactNumberic组件会，它有一段代码value.toString()就会报错了。 </description>
    </item>
    
    <item>
      <title>Debug</title>
      <link>https://77doc.wss.cool/docs/debug/</link>
      <pubDate>Wed, 13 Jan 2021 14:57:52 +0800</pubDate>
      
      <guid>https://77doc.wss.cool/docs/debug/</guid>
      <description>标准的form可以在控制台拿到presenter：
bizFormPresenter.api.formController.entityCRUD </description>
    </item>
    
  </channel>
</rss>